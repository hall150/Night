{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/js/game.js",
    "src/js/objects/RainbowText.js",
    "src/js/states/GameState.js",
    "src/js/states/boot.js",
    "src/js/states/index.js",
    "src/js/states/menu.js",
    "src/js/states/over.js",
    "src/js/states/play.js",
    "src/js/states/preload.js"
  ],
  "names": [],
  "mappings": "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MAAL,AAAW,aAAX,AAAwB,GAAxB,AAA2B,AAE3B;;AACA;mBAAA,AAAO,OAAP,AAAc,uBAAuB,KAAA,AAAK,KAA1C,AAA+C,AAE/C;;AACA;iBAAA,AAAK,KAAL,AAAU,QAAV,AAAkB,YAAY,OAAA,AAAO,QAArC,AAA6C,AAE7C;;AACA;iBAAA,AAAK,KAAL,AAAU,IAAV,AAAc,OAAO,OAAA,AAAO,OAA5B,AAAmC,AAEnC;;AACA;iBAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AACpB;;;;;EAxB6B,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;yC,ACAb;;;;;;;;;4C,AACA;;;;;;;;;yC,AACA;;;;;;;;;yC,AACA;;;;;;;;;yC,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJR;;I,AAEqB;;;;;;;;;;;iCAER,AAEL;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;;;EAjD6B,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFrB;;I,AAEqB;;;;;;;;;;;iCAER,AAEL;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;;;EApE6B,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFrB;AACA;AACA;;I,AAEqB;;;;;;;;;;;iCAER,AAEL;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;;iCAEQ,AA6CR,CA5CG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;EArN8B,O,AAAO;;kB,AAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;I,ACJA;;;;;;;;;;;kCAEP,AAEN;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;;;;iCAEQ,AACL;iBAAA,AAAK,MAAL,AAAW,MAAX,AAAiB,AACpB;;;;;EAvCgC,O,AAAO;;kB,AAAvB",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import * as states from './states';\nimport GameState from './states/GameState';\n\nconst SNES_WIDTH = 256;\nconst SNES_HEIGHT = 224;\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(window.innerWidth / 2.05, SNES_HEIGHT, Phaser.WEBGL, 'content', null);\n\t\tthis.state.add('GameState', GameState, false);\n\t\tthis.state.start('GameState');\n\t}\n\n}\n\nconst GAME = new Game();\n\nObject.keys(states).forEach(state => GAME.state.add(state, states[state]));\n\nGAME.state.start('Boot');\n\n$(window).resize(function() { resizeGame(); } );\n\n\nfunction resizeGame() {\n    var size = {\n        width: window.innerWidth / 2.05,\n        height: SNES_HEIGHT\n    };\n    GAME.width = size.width;\n    GAME.height = size.height;\n    GAME.canvas.width = size.width;\n    GAME.canvas.height = size.height;\n    GAME.scale.width = size.width;\n    GAME.scale.height = size.height;\n    GAME.renderer.resize(size.width, size.height);\n    GAME.camera.setSize(size.width, size.height);\n    GAME.camera.setBoundsToWorld();\n}\n",
    "class RainbowText extends Phaser.Text {\n\n\tconstructor(game, x, y, text) {\n\n\t\tsuper(game, x, y, text, { font: \"45px Arial\", fill: \"#ff0044\", align: \"center\" });\n\n\t\tthis._speed = 125; //ms\n\t\tthis._colorIndex = 0;\n\t\tthis._colors = ['#ee4035', '#f37736', '#fdf498', '#7bc043', '#0392cf'];\n\n\t\tthis.colorize();\n\t\tthis.startTimer();\n\n\t\tthis.game.stage.addChild(this);\n\n\t}\n\t\n\tstartTimer() {\n\t\tthis.game.time.events.loop(this._speed, this.colorize, this).timer.start();\n\t}\n\n\tcolorize() {\n\n\t\tfor (let i = 0; i < this.text.length; i++) {\n\n\t\t\tif (this._colorIndex === this._colors.length) {\n\t\t\t\tthis._colorIndex = 0;\n\t\t\t}\n\n\t\t\tthis.addColor(this._colors[this._colorIndex], i);\n\t\t\tthis._colorIndex++;\n\n\t\t}\n\n\t}\n\n}\n\nexport default RainbowText;",
    "import RainbowText from '../objects/RainbowText';\n\nclass GameState extends Phaser.State {\n\n\tcreate() {\n\t\tlet center = { x: this.game.world.centerX, y: this.game.world.centerY }\n\t\tlet text = new RainbowText(this.game, center.x, center.y, \"- phaser -\\nwith a sprinkle of\\nES6 dust!\");\n\t\ttext.anchor.set(0.5);\n\t}\n\n}\n\nexport default GameState;\n",
    "export default class Boot extends Phaser.State {\n\n    preload() {\n        // this.game.stage.backgroundColor = '#000';\n        // this.load.image('loaderBg', 'img/loader-bg.png');\n        // this.load.image('loaderBar', 'img/loader-bar.png');\n    }\n\n    create() {\n        // Scale\n        this.scale.scaleMode = Phaser.ScaleManager.USER_SCALE;\n        this.scale.setUserScale(2, 2);\n\n        // enable crisp rendering\n        Phaser.Canvas.setImageRenderingCrisp(this.game.canvas)\n\n        // Physics\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n\n        // Debug\n        this.game.add.plugin(Phaser.Plugin.Debug);\n\n        // Start Prelod State\n        this.state.start('Preload');\n    }\n\n}\n",
    "export {default as Boot} from './boot';\nexport {default as Preload} from './preload';\nexport {default as Menu} from './menu';\nexport {default as Play} from './play';\nexport {default as Over} from './over';\n",
    "// import TextButton from '../extensions/textbutton';\n\nexport default class Menu extends Phaser.State {\n\n    create() {\n\n        // this.music = this.game.add.audio('menuMusic');\n        //\n        // this.title = new Phaser.Text(this.game, this.game.world.centerX, this.game.world.centerY-200, 'Shoot\\'Em Up', {\n        //     font: '36px Tahoma',\n        //     fill: 'white',\n        //     align: 'center'\n        // });\n        // this.title.anchor.setTo(0.5);\n        //\n        // this.start = new TextButton({\n        //     game: this.game,\n        //     x: this.game.world.centerX,\n        //     y: this.game.world.centerY,\n        //     asset: 'button',\n        //     overFrame: 2,\n        //     outFrame: 1,\n        //     downFrame: 0,\n        //     upFrame: 1,\n        //     label: 'Start',\n        //     style: {\n        //         font: '16px Verdana',\n        //         fill: 'white',\n        //         align: 'center'\n        //     }\n        // });\n        //\n        // this.btnOverSound = this.add.sound('menuOver');\n        // this.btnOutSound = this.add.sound('menuOut');\n        // this.btnDownSound = this.add.sound('menuDown');\n        //\n        // this.start.setOverSound(this.btnOverSound);\n        // this.start.setOutSound(this.btnOutSound);\n        // this.start.setDownSound(this.btnDownSound);\n        //\n        // this.start.onInputUp.add(()=>{\n        //     this.music.stop();\n        //     this.state.start('Play');\n        //\n        // });\n        //\n        // this.menuPanel = this.add.group();\n        // this.menuPanel.add(this.title);\n        // this.menuPanel.add(this.start);\n        //\n        // this.music.loopFull();\n    }\n}\n",
    "// import TextButton from '../extensions/textbutton';\n\nexport default class Over extends Phaser.State {\n\n    create() {\n\n        // this.gameOverTitle = new Phaser.Text(this.game, this.game.world.centerX, this.game.world.centerY-200, 'Game over', {\n        //     font: '36px Tahoma',\n        //     fill: 'white',\n        //     align: 'center'\n        // });\n        // this.gameOverTitle.anchor.setTo(0.5);\n        //\n        // this.start = new TextButton({\n        //     game: this.game,\n        //     x: this.game.world.centerX,\n        //     y: this.game.world.centerY-30,\n        //     asset: 'button',\n        //     overFrame: 2,\n        //     outFrame: 1,\n        //     downFrame: 0,\n        //     upFrame: 1,\n        //     label: 'Try again',\n        //     style: {\n        //         font: '16px Verdana',\n        //         fill: 'white',\n        //         align: 'center'\n        //     }\n        // });\n        //\n        // this.menu = new TextButton({\n        //     game: this.game,\n        //     x: this.game.world.centerX,\n        //     y: this.game.world.centerY+30,\n        //     asset: 'button',\n        //     overFrame: 2,\n        //     outFrame: 1,\n        //     downFrame: 0,\n        //     upFrame: 1,\n        //     label: 'Menu',\n        //     style: {\n        //         font: '16px Verdana',\n        //         fill: 'white',\n        //         align: 'center'\n        //     }\n        // });\n        //\n        // this.btnOverSound = this.add.sound('menuOver');\n        // this.btnOutSound = this.add.sound('menuOut');\n        // this.btnDownSound = this.add.sound('menuDown');\n        //\n        // this.start.setOverSound(this.btnOverSound);\n        // this.start.setOutSound(this.btnOutSound);\n        // this.start.setDownSound(this.btnDownSound);\n        // this.menu.setOverSound(this.btnOverSound);\n        // this.menu.setOutSound(this.btnOutSound);\n        // this.menu.setDownSound(this.btnDownSound);\n        //\n        // this.start.onInputDown.add(()=>{\n        //     this.state.start('Play');\n        // });\n        //\n        // this.menu.onInputDown.add(()=>{\n        //     this.state.start('Menu');\n        // });\n        //\n        // this.gameOverPanel = this.add.group();\n        // this.gameOverPanel.add(this.gameOverTitle);\n        // this.gameOverPanel.add(this.start);\n        // this.gameOverPanel.add(this.menu);\n    }\n}\n",
    "// import Player from '../prefabs/player';\n// import Enemy from '../prefabs/enemy';\n// import HUD from '../prefabs/hud';\n\nexport default class Play extends Phaser.State {\n\n    create() {\n\n        // this.farback = this.add.tileSprite(0, 0, 800, 2380, 'farback');\n        //\n        // this.game.time.slowMotion = 1;\n        //\n        // this.enemies = this.add.group();\n        // this.enemies.enableBody = true;\n        //\n        // this.player = new Player({\n        //     game: this.game,\n        //     x: this.game.world.centerX,\n        //     y: 0.92 * this.game.world.height,\n        //     health: 100,\n        //     asset: 'smallfighter',\n        //     frame: 1\n        // });\n        // this.game.stage.addChild(this.player);\n        //\n        // this.hud = new HUD({\n        //     game: this.game,\n        //     player: this.player\n        // });\n        //\n        // this.game.input.onDown.add(() => {\n        //     this.game.time.slowMotion = 1;\n        // });\n        //\n        // this.game.input.onUp.add(() => {\n        //     this.game.time.slowMotion = 3;\n        // });\n        //\n        // this.enemyTime = 0;\n        // this.enemyInterval = 1.5;\n        // this.enemyShootTime = 0;\n        // this.enemyShootInterval = 1;\n        // this.playerShootTime = 0;\n        // this.playerShootInterval = 0.16;\n        //\n        // this.game.time.events.loop(Phaser.Timer.SECOND * 10, () => {\n        //     if(this.enemyInterval > 0.2 ){\n        //         this.enemyInterval -= 0.1;\n        //     }\n        // });\n        //\n        // this.overlayBitmap = this.add.bitmapData(this.game.width, this.game.height);\n        // this.overlayBitmap.ctx.fillStyle = '#000';\n        // this.overlayBitmap.ctx.fillRect(0, 0, this.game.width, this.game.height);\n        //\n        // this.overlay = this.add.sprite(0, 0, this.overlayBitmap);\n        // this.overlay.visible = false;\n        // this.overlay.alpha = 0.75;\n        //\n        // this.music = this.game.add.audio('playMusic');\n        // this.bulletHitSound = this.add.sound('bulletHit');\n        // this.enemyExplosionSound = this.add.sound('enemyExplosion');\n        // this.playerExplosionSound = this.add.sound('playerExplosion');\n        // this.gameOverSound = this.add.sound('gameOver');\n        //\n        // this.music.loopFull();\n    }\n\n    update() {\n        //\n        // this.enemyTime += this.game.time.physicsElapsed;\n        // this.enemyShootTime += this.game.time.physicsElapsed;\n        // this.playerShootTime += this.game.time.physicsElapsed;\n        //\n        // if (this.enemyTime > this.enemyInterval) {\n        //     this.enemyTime = 0;\n        //\n        //     this.createEnemy({\n        //         game: this.game,\n        //         x: this.game.rnd.integerInRange(6, 76) * 10,\n        //         y: 0,\n        //         speed: {\n        //             x: this.game.rnd.integerInRange(5, 10) * 10 * (Math.random() > 0.5 ? 1 : -1),\n        //             y: this.game.rnd.integerInRange(5, 10) * 10\n        //         },\n        //         health: 9,\n        //         bulletSpeed: this.game.rnd.integerInRange(10, 20) * 10,\n        //         asset: 'alien'\n        //     });\n        // }\n        //\n        // if (this.enemyShootTime > this.enemyShootInterval) {\n        //     this.enemyShootTime = 0;\n        //     this.enemies.forEachAlive(enemy => enemy.shoot());\n        //     if (!this.player.alive) {\n        //         this.game.world.bringToTop(this.overlay);\n        //     }\n        // }\n        //\n        // if (this.playerShootTime > this.playerShootInterval) {\n        //     this.playerShootTime = 0;\n        //     if (this.player.alive) {\n        //         this.player.shoot();\n        //     }\n        // }\n        //\n        // this.game.physics.arcade.overlap(this.player.bullets, this.enemies, this.hitEnemy, null, this);\n        //\n        // this.game.physics.arcade.overlap(this.player, this.enemies, this.crashEnemy, null, this);\n        //\n        // this.enemies.forEach(enemy => this.game.physics.arcade.overlap(this.player, enemy.bullets, this.hitPlayer, null, this));\n        //\n        // this.farback.tilePosition.y += 3;\n    }\n\n    // createEnemy(data) {\n    //\n    //     let enemy = this.enemies.getFirstExists(false);\n    //\n    //     if (!enemy) {\n    //         enemy = new Enemy(data);\n    //         this.enemies.add(enemy);\n    //     }\n    //     enemy.reset(data);\n    // }\n    //\n    // hitEffect(obj, color) {\n    //     let tween = this.game.add.tween(obj);\n    //     let emitter = this.game.add.emitter();\n    //     let emitterPhysicsTime = 0;\n    //     let particleSpeed = 100;\n    //     let maxParticles = 10;\n    //\n    //     tween.to({tint: 0xff0000}, 100);\n    //     tween.onComplete.add(() => {\n    //         obj.tint = 0xffffff;\n    //     });\n    //     tween.start();\n    //\n    //     emitter.x = obj.x;\n    //     emitter.y = obj.y;\n    //     emitter.gravity = 0;\n    //     emitter.makeParticles('particle');\n    //\n    //     if (obj.health <= 0) {\n    //         particleSpeed = 200;\n    //         maxParticles = 40;\n    //         color = 0xff0000;\n    //     }\n    //\n    //     emitter.minParticleSpeed.setTo(-particleSpeed, -particleSpeed);\n    //     emitter.maxParticleSpeed.setTo(particleSpeed, particleSpeed);\n    //     emitter.start(true, 500, null, maxParticles);\n    //     emitter.update = () => {\n    //         emitterPhysicsTime += this.game.time.physicsElapsed;\n    //         if(emitterPhysicsTime >= 0.6){\n    //             emitterPhysicsTime = 0;\n    //             emitter.destroy();\n    //         }\n    //\n    //     };\n    //     emitter.forEach(particle => particle.tint = color);\n    //     if (!this.player.alive) {\n    //         this.game.world.bringToTop(this.overlay);\n    //     }\n    // }\n    //\n    // hitEnemy(bullet, enemy) {\n    //     this.bulletHitSound.play(\"\",0,0.5);\n    //     enemy.damage(bullet.health);\n    //     this.hitEffect(enemy, bullet.tint);\n    //     if (!enemy.alive) {\n    //         this.enemyExplosionSound.play(\"\",0,0.5);\n    //         this.hud.updateScore(enemy.maxHealth);\n    //     }\n    //     bullet.kill();\n    // }\n    //\n    // hitPlayer(player, bullet) {\n    //     this.bulletHitSound.play(\"\",0,0.5);\n    //     player.damage(bullet.health);\n    //     this.hud.updateHealth();\n    //     this.hitEffect(player, bullet.tint);\n    //     if (!player.alive) {\n    //         this.playerExplosionSound.play();\n    //         this.gameOver();\n    //     }\n    //     bullet.kill();\n    // }\n    //\n    // crashEnemy(player, enemy) {\n    //     enemy.damage(enemy.health);\n    //     player.damage(enemy.health);\n    //     this.hitEffect(player);\n    //     this.hitEffect(enemy);\n    //     if (!enemy.alive) {\n    //         this.enemyExplosionSound.play(\"\",0,0.5);\n    //         this.hud.updateScore(enemy.maxHealth);\n    //     }\n    //     this.hud.updateHealth();\n    //     if (!player.alive) {\n    //         this.playerExplosionSound.play();\n    //         this.gameOver();\n    //     }\n    // }\n    //\n    // gameOver(){\n    //     this.game.time.slowMotion = 3;\n    //     this.overlay.visible = true;\n    //     this.game.world.bringToTop(this.overlay);\n    //     let timer = this.game.time.create(this.game, true);\n    //     timer.add(3000, () => {\n    //         this.music.stop();\n    //         this.gameOverSound.play();\n    //         this.game.state.start('Over');\n    //     });\n    //     timer.start();\n    // }\n\n}\n",
    "export default class Preload extends Phaser.State {\n\n    preload() {\n\n        // this.loaderBg = this.add.sprite(this.game.world.centerX, this.game.world.centerY, 'loaderBg');\n        // this.loaderBar = this.add.sprite(this.game.world.centerX, this.game.world.centerY, 'loaderBar');\n        // this.loaderBg.anchor.setTo(0.5);\n        // this.loaderBar.anchor.setTo(0.5);\n        //\n        // this.load.setPreloadSprite(this.loaderBar);\n        //\n        // this.load.atlasJSONArray('smallfighter', 'img/spritesheet/smallfighter.png', 'data/spritesheet/smallfighter.json');\n        // this.load.atlasJSONArray('alien', 'img/spritesheet/alien.png', 'data/spritesheet/alien.json');\n        // this.load.atlasJSONArray('button', 'img/spritesheet/button.png', 'data/spritesheet/button.json');\n        // this.load.image('farback', 'img/farback.jpg');\n        // this.load.image('bullet', 'img/bullet.png');\n        // this.load.image('particle', 'img/particle.gif');\n        // this.load.image('healthbar', 'img/healthbar.png');\n        // this.load.image('hudBg', 'img/hud-bg.png');\n        //\n        // this.load.audio('playMusic', ['audio/music/play.mp3']);\n        // this.load.audio('menuMusic', ['audio/music/menu.mp3']);\n        //\n        // this.load.audio('menuOver', ['audio/sound/menu-over.mp3']);\n        // this.load.audio('menuOut', ['audio/sound/menu-out.mp3']);\n        // this.load.audio('menuDown', ['audio/sound/menu-click.mp3']);\n        //\n        // this.load.audio('bulletHit', ['audio/sound/bullet-hit.mp3']);\n        // this.load.audio('enemyShot', ['audio/sound/enemy-shot.mp3']);\n        // this.load.audio('enemyExplosion', ['audio/sound/enemy-explosion.mp3']);\n        // this.load.audio('playerShot', ['audio/sound/player-shot.mp3']);\n        // this.load.audio('playerExplosion', ['audio/sound/player-explosion.mp3']);\n        //\n        // this.load.audio('gameOver', ['audio/sound/game-over.mp3']);\n\n    }\n\n    create() {\n        this.state.start('Menu');\n    }\n\n}\n"
  ]
}